class Solution {
  public:
   void reverse(Node*&head){
       if(head==NULL) return;
       Node*curr = head;
       Node*next = NULL;
       Node*prev = NULL;
       while(curr!=NULL){
           next = curr->next;
           curr->next = prev;
           prev = curr;
           curr = next;
       }
       head =prev;
   }
    Node* addOne(Node* head) {
        
        if(head==NULL) return head;
        reverse(head);
        Node*temp = head;
        int carry =1;
        
        while(temp!=NULL){
            
            int sum = temp->data+carry;
            
            carry = sum/10;
             temp->data = sum%10;
            if(carry==0) break;
            if(temp->next==NULL&&carry>0){
                temp->next = new Node(carry);
                carry =0;
                break;
            }
            
            temp = temp->next;
        }
        reverse(head);
        return head;
    }
};
